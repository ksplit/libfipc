
# @FIPC_AUTOCONF_NOTICE@

# Build libfipc as static library. Unfortunately, the name of the
# library is hard-coded in the kernel build system to be lib.a. (We
# have an extra build step that cp's lib.a -> libfipc.a.)

# Note: Kernel expects the files to be relative paths (it always prepends
# the current directory).

# This single line of magic makes it so we can do an out of src tree
# build. It has to do with how and where this Kbuild file is included
# in the kernel build system.
src = @abs_top_srcdir@/src/platform/kernel

# This needs to be pasted in here, because the kernel build system will force
# gcc at the top-level.
export CC=@CC@

# Sources that make up library
lib-y += \
	$(COMMON_SRCS:.c=.o)

# Pass along include directories from the Automake file
ccflags-y += $(CFLAGS) $(AM_CPPFLAGS)

# Provide option to filter out some kbuild cflags (this is needed for
# clang builds).
KBUILD_CFLAGS := $(filter-out $(LIBFIPC_BAD_CFLAGS), $(KBUILD_CFLAGS))